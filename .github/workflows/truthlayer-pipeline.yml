name: TruthLayer Pipeline

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggers

env:
  NODE_VERSION: '20'

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: truthlayer
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build all packages
        run: pnpm --filter "./**" build
      
      - name: Run TruthLayer pipeline
        env:
          STORAGE_URL: postgres://postgres:postgres@localhost:5432/truthlayer
          BENCHMARK_QUERY_SET_PATH: config/benchmark-queries.json
          COLLECTOR_OUTPUT_DIR: data/serp
          COLLECTOR_MAX_RESULTS: 20
          COLLECTOR_RESPECT_ROBOTS: false
          ANNOTATION_PROVIDER: openai
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LOG_LEVEL: info
        run: |
          node -e "import('./apps/scheduler/dist/index.js').then(async m => { 
            const app = await m.createSchedulerApp(); 
            await app.trigger(); 
            process.exit(0); 
          })"
      
      - name: Upload metrics artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: metrics-${{ github.run_number }}
          path: |
            data/metrics/*.csv
            data/metrics/*.json
          retention-days: 90

